<?xml version="1.0" encoding="utf-8"?>
<root>
  <doclet-version-NOT-library-version>1.00</doclet-version-NOT-library-version>
  <b4x_version>9.10</b4x_version>
  <dependsOn>javaobject</dependsOn>
  <dependsOn>jcore</dependsOn>
  <dependsOn>jfx</dependsOn>
  <dependsOn>jxui</dependsOn>
  <dependsOn>json</dependsOn>
  <dependsOn>jstringutils</dependsOn>
  <dependsOn>okhttp</dependsOn>
  <dependsOn>okhttp-3.12.12</dependsOn>
  <dependsOn>okio-1.17.5</dependsOn>
  <class>
    <name>b4j.example.paystack</name>
    <shortname>Paystack</shortname>
    <event>Initialize(InsObject As Object, ActModule As Activity)</event>
    <event>InitializeTransaction(Email As String, Amount As Int,Reference As String,Currency As String)</event>
    <event>VerifyTransaction(Reference As String)</event>
    <event>CancelPayment</event>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="CancelPayment">_cancelpayment</name>
      <comment>Cancels the payment
&lt;code&gt;Pay.CancelPayment&lt;/code&gt;
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Class_Globals">_class_globals</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <comment>Initializes Paystack
InsObject - Current Instance
ActModule - Current Activity
pKey - Public Key
sKey - Secret Key(Optional)
&lt;code&gt;
Pay.Initialize(Me,Activity)
&lt;/code&gt;
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
      <parameter>
        <name>InsObject</name>
        <type>Object</type>
      </parameter>
      <parameter>
        <name>ActModule</name>
        <type>anywheresoftware.b4j.objects.Form</type>
      </parameter>
      <parameter>
        <name>pKey</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>sKey</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="InitializeTransaction">_initializetransaction</name>
      <comment>Starts a transaction
Email - Email of the payee
Amount - Payment amount
Reference - Reference of transaction
Currency - Currency of transaction
&lt;code&gt;Pay.InitializeTransaction("oxxxxx@gmail.com", 1,"test-1234",Pay.CURRENCY_USD)&lt;/code&gt;
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Email</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>Amount</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Reference</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>Currency</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="VerifyTransaction">_verifytransaction</name>
      <comment>Verify transaction
Reference - Reference of transaction
&lt;code&gt;Pay.VerifyTransaction("12345")&lt;/code&gt;
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Reference</name>
        <type>String</type>
      </parameter>
    </method>
    <field>
      <name DesignerName="CURRENCY_GHS">_currency_ghs</name>
      <returntype>String</returntype>
    </field>
    <field>
      <name DesignerName="CURRENCY_NGN">_currency_ngn</name>
      <returntype>String</returntype>
    </field>
    <field>
      <name DesignerName="CURRENCY_ZAR">_currency_zar</name>
      <returntype>String</returntype>
    </field>
    <field>
      <name DesignerName="CURRENCY_USD">_currency_usd</name>
      <returntype>String</returntype>
    </field>
  </class>
  <version>1</version>
  <author>Claude Obiri Amadu</author>
</root>